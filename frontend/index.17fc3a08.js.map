{"mappings":"ACCA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,QAAQ,GAAG,CAAC,iBAGZ,SAAS,cAAc,CAAC,cAAc,gBAAgB,CAAC,QAAS,WAC9D,QAAQ,GAAG,CAAC,2BACZ,OAAO,QAAQ,CAAC,IAAI,CAAG,YACzB,GAGA,SAAS,cAAc,CAAC,cAAc,gBAAgB,CAAC,QAAS,WAC9D,QAAQ,GAAG,CAAC,2BACZ,OAAO,QAAQ,CAAC,IAAI,CAAG,YACzB,GAGA,IAAM,EAAW,SAAS,gBAAgB,CAAC,WAGrC,EAAiB,CAAC,EAAS,EAAO,EAAK,KAC3C,IAAI,EAAY,KAEV,EAAO,AAAC,IACP,GAAW,CAAA,EAAY,CAA5B,EACA,IAAM,EAAW,EAAY,EACvB,EAAU,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,EAAW,EAAY,CAAA,EAAM,CAAA,EAAS,GAAQ,EAClF,CAAA,EAAQ,WAAW,CAAG,EAElB,EAAW,EACb,sBAAsB,GAEtB,EAAQ,WAAW,CAAG,CAE1B,EAEA,sBAAsB,EACxB,EAGM,EAA2B,KAC/B,EAAS,OAAO,CAAC,AAAA,IACf,IAAM,EAAS,CAAC,EAAQ,YAAY,CAAC,eACrC,EAAe,EAAS,EAAG,EAAQ,IACrC,EACF,EAGA,IAKA,AAFuB,SAAS,aAAa,CAAC,oBAE/B,gBAAgB,CAAC,aAAc,WAC5C,GACF,EACF","sources":["<anon>","js/index.js"],"sourcesContent":["// Ensure the DOM is fully loaded before executing the script\ndocument.addEventListener('DOMContentLoaded', function() {\n    console.log('Script loaded'); // Debugging log\n    // Redirect to login page when Find Job button is clicked\n    document.getElementById('findJobBtn').addEventListener('click', function() {\n        console.log('Find Job button clicked');\n        window.location.href = 'login.html'; // This will redirect to login page\n    });\n    // Redirect to login page when Post Job button is clicked\n    document.getElementById('postJobBtn').addEventListener('click', function() {\n        console.log('Post Job button clicked');\n        window.location.href = 'login.html'; // This will redirect to login page\n    });\n    // Counter animation code\n    const counters = document.querySelectorAll('.number');\n    // Function to animate counters\n    const animateCounter = (counter, start, end, duration)=>{\n        let startTime = null;\n        const step = (timestamp)=>{\n            if (!startTime) startTime = timestamp;\n            const progress = timestamp - startTime;\n            const current = Math.min(Math.floor(progress / duration * (end - start) + start), end);\n            counter.textContent = current;\n            if (progress < duration) requestAnimationFrame(step);\n            else counter.textContent = end; // Ensure the counter ends at the exact value\n        };\n        requestAnimationFrame(step);\n    };\n    // Function to trigger animations for each counter with the target value\n    const triggerCounterAnimations = ()=>{\n        counters.forEach((counter)=>{\n            const target = +counter.getAttribute('data-number'); // Get the target number from data attribute\n            animateCounter(counter, 0, target, 2000); // Animate over 2 seconds\n        });\n    };\n    // Trigger animations immediately on page load\n    triggerCounterAnimations();\n    // Add hover event to start animation when section is hovered\n    const sectionCounter = document.querySelector('.section-counter');\n    sectionCounter.addEventListener('mouseenter', function() {\n        triggerCounterAnimations();\n    });\n});\n\n//# sourceMappingURL=index.17fc3a08.js.map\n","// Ensure the DOM is fully loaded before executing the script\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  console.log('Script loaded');  // Debugging log\r\n\r\n  // Redirect to login page when Find Job button is clicked\r\n  document.getElementById('findJobBtn').addEventListener('click', function() {\r\n    console.log('Find Job button clicked');\r\n    window.location.href = 'login.html';  // This will redirect to login page\r\n  });\r\n\r\n  // Redirect to login page when Post Job button is clicked\r\n  document.getElementById('postJobBtn').addEventListener('click', function() {\r\n    console.log('Post Job button clicked');\r\n    window.location.href = 'login.html';  // This will redirect to login page\r\n  });\r\n\r\n  // Counter animation code\r\n  const counters = document.querySelectorAll('.number');\r\n\r\n  // Function to animate counters\r\n  const animateCounter = (counter, start, end, duration) => {\r\n    let startTime = null;\r\n\r\n    const step = (timestamp) => {\r\n      if (!startTime) startTime = timestamp;\r\n      const progress = timestamp - startTime;\r\n      const current = Math.min(Math.floor(progress / duration * (end - start) + start), end);\r\n      counter.textContent = current;\r\n\r\n      if (progress < duration) {\r\n        requestAnimationFrame(step);\r\n      } else {\r\n        counter.textContent = end; // Ensure the counter ends at the exact value\r\n      }\r\n    };\r\n\r\n    requestAnimationFrame(step);\r\n  };\r\n\r\n  // Function to trigger animations for each counter with the target value\r\n  const triggerCounterAnimations = () => {\r\n    counters.forEach(counter => {\r\n      const target = +counter.getAttribute('data-number'); // Get the target number from data attribute\r\n      animateCounter(counter, 0, target, 2000); // Animate over 2 seconds\r\n    });\r\n  };\r\n\r\n  // Trigger animations immediately on page load\r\n  triggerCounterAnimations();\r\n\r\n  // Add hover event to start animation when section is hovered\r\n  const sectionCounter = document.querySelector('.section-counter');\r\n\r\n  sectionCounter.addEventListener('mouseenter', function() {\r\n    triggerCounterAnimations();\r\n  });\r\n});\r\n"],"names":["document","addEventListener","console","log","getElementById","window","location","href","counters","querySelectorAll","animateCounter","counter","start","end","duration","startTime","step","timestamp","progress","current","Math","min","floor","textContent","requestAnimationFrame","triggerCounterAnimations","forEach","target","getAttribute","sectionCounter","querySelector"],"version":3,"file":"index.17fc3a08.js.map"}